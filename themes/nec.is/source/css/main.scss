@import 'colors.scss';
@import 'mixins.scss';

article,
section.article-meta {
    position: relative;
    max-width: 60rem;
    padding: 0 2rem 2rem;
    margin: 0 auto;

    a {
        text-decoration: none;
        color: $color-blue;

        &:visited {
            color: $color-blue;
        }

        &:hover {
            @include underline($color-white, $color-blue)
        }
    }

    h2,
    h3,
    h4 {
        font-family: 'Libre Franklin', sans-serif;
        font-weight: 500;
        position: relative;
        margin: 2rem 0;


        a {
            color: $color-black;

            &:visited {
                color: $color-black;
            }

            &:hover {
                @include underline($color-white, $color-blue, 94%, .09em)
            }
        }
    }

    h2 {
        font-size: 1.999rem;
        line-height: 2.8rem;
        border-left: 2px solid $color-black;
        margin: 2rem 0 2rem -2rem;
        padding-left: calc(2rem - 2px);
    }

    h3 {
        font-size: 1.414rem;
        line-height: 2.1rem;
    }

    .image {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid lighten($color-black, 75%);


        .image-description {
            display: block;
            font-style: italic;
            font-family: 'Libre Franklin', sans-serif;
            font-size: .8rem;
            color: lighten($color-black, 50%);
            text-align: left;
            line-height: 1.5rem;
        }

        &.wrap-right,
        &.wrap-left {
            width: 330px;
            text-align: center;


            @media (max-width:480px) {
                width: 100%;
            }

            img {
                max-width: 100%;
            }
        }

        &.wrap-right {
            float: left;
            margin-right: 2rem;
        }

        &.wrap-left {
            float: right;
            margin-left: 2rem;
        }

        &.full {
            width: calc(100% + 4rem);
            margin: 2rem 0 2rem -2rem;
            display: inherit;
            border-bottom: none;

            img {
                width: 100%;
            }

            .image-description {
                padding: 0 2rem;
            }
        }


    }

    p {
        margin: 2rem 0;

        &:last-child {
            margin-bottom: 0;
        }
    }

    ul {
        margin: 1rem 0;
        padding: 0 0 0 1rem;
        list-style-type:  square;
    }

    li {
        margin:  0;
        padding:  0;
    }

    .article-archive-meta {
        display: block;
        font-family: 'Libre Franklin', sans-serif;
        font-weight: 300;
        font-size: .8rem;
        color: lighten($color-black, 50%);
        margin-top: .3rem;

        .read-time::before {
            content: '\00B7';
            display: inline-block;
            padding: 0 .2rem;
        }
    }

}

article {
    &:last-child,
    &:last-of-type {
        margin-bottom: 4rem;

        &::after {
            content: "";
            display: table;
            clear: both;
        }
    }
}

.header--shrink main {
    padding-top: var(--headerHeight);
}

section.article-meta {
    max-width: 100%;
    width: 100%;
    padding: 2rem 0 2rem;
    margin: -6rem 0 0;
    transform: translateY(6rem);
    background-color: $color-light-1;

    font-family: 'Libre Franklin', sans-serif;
    font-weight: 300;
    font-size: .9em;

    &::after {
        z-index: 1;
        content: '';
        display: block;
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        transform: skewY(calc(var(--footerSkew) * -0.6));
        transform-origin: left top;
        background-color: inherit;
    }

    .article-meta__inner {
        position: relative;
        z-index: 2;
        max-width: 960px;
        padding: 0 2rem 6rem;
        margin: 0 auto;
    }

    p:first-of-type {
        margin-top: 0;
    }

    ul.article-tag-list {
        display: inline-block;
        margin: 0;
        padding: 0;

        li {
            display: inherit;
            padding-right: .3rem;

            a::after {
                content: ',';
            }

            &:last-child {
                padding-right: 0;
                a::after {
                    content: '';
                }
            }
        }
    }
}


.read-more::after {
    content: 'â€º';
}